{"version":3,"sources":["modules/Load/actions.js","modules/Load/all.js","modules/Load/api.js","modules/Load/sagas.js","components/TypeList/TypeList.js","components/BaseStats/BaseStats.js","components/Pokemon/Pokemon.js","components/PokemonList/api.js","components/MiniPokyCard/MiniPokyCard.js","components/EvolutionCard/EvolutionCard.js","components/PokemonList/PokemonList.js","components/App/App.js","components/App/api.js","modules/index.js","store.js","index.js","components/Pokemon/Pokemon.module.css","components/EvolutionCard/EvolutionCard.module.css","components/PokemonList/PokemonList.module.css","components/TypeList/TypeList.module.css","components/BaseStats/BaseStats.module.css","components/MiniPokyCard/MiniPokyCard.module.css"],"names":["loadRequest","createAction","loadSuccess","loadFailure","filterRequest","filterSuccess","filterFailure","pokemons","handleActions","_handleActions","Object","defineProperty","_state","action","payload","concat","next","_handleActions2","isLoading","_handleActions3","error","_handleActions4","combineReducers","loadURL","url","fetch","method","mode","then","response","json","res","filter","typeName","pokemon","loadPokemon","pokemonFilterFlow","pokemonFlow","fetchPokemonFlowWatcher","type","results","regenerator_default","a","wrap","_context","prev","call","sent","all","map","result","put","t0","stop","_marked","this","urlString","_context2","_marked2","_context3","takeLatest","_marked3","_callee","_context4","fork","_marked4","TypeList","state","filterValue","handleChange","event","_this","_this$props","props","target","value","setState","typeList","react_default","createElement","MenuItem","key","types","className","styles","container","Typography","title","TextField","id","select","name","placeholder","onChange","length","Component","mapDispatchToProps","connect","BaseStats","statArr","stats","forEach","elem","stat","toString","push","val","base_stat","reverse","_this2","color","determColor","style","width","textAlign","bar_container","bar","border","backgroundColor","colors","Pokemon","n","len","Array","join","Math","floor","random","realFeet","wholeFeet","inches","addPad","round","onClick","main","avatar","avatar_img","src","sprites","front_default","alt","mainData","fontWeight","display","ind","typeBox","getRandomColor","species","toFeet","parseInt","height","weight","abilities","ability","add","is_hidden","title_stats","components_BaseStats_BaseStats","takeData","SpeciesCard","findTypes","typeString","card","EvolutionCard","renderMiniCards","MiniPokyCard","clickedPoky","to","from","closePopup","popup","popup_inner","column","column_title","PokemonList","pokemonList","showPopup","specId","handlePokemonClick","retrieveEvolutData","evolves_from_species","ancestObj","ancestor","retrivePokemons","varieties","evolution_chain","descendObj","chain","descUrl","findDesc","descendant","Promise","variant","renderEvolutionCard","_this$state","console","log","components_EvolutionCard_EvolutionCard","chainObj","evolves_to","components_Pokemon_Pokemon","bind","_this$state2","renderPokemons","message","text","App","handleScroll","ev","element","scrollHeight","scrollTop","clientHeight","catch","react","components_TypeList_TypeList","overflowY","onScroll","components_PokemonList_PokemonList","rootSaga","loadSagas","modules_marked","createAppStore","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","run","getStore","ReactDOM","render","es","components_App_App","document","getElementById","module","exports","textField"],"mappings":"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","file":"static/js/main.8de3a789.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\r\n\r\nexport const loadRequest = createAction('LOAD_REQUEST');\r\nexport const loadSuccess = createAction('LOAD_SUCCESS');\r\nexport const loadFailure = createAction('LOAD_FAILURE');\r\nexport const filterRequest = createAction('FILTER_REQUEST');\r\nexport const filterSuccess = createAction('FILTER_SUCCESS');\r\nexport const filterFailure = createAction('FILTER_FAILURE');","import { handleActions } from 'redux-actions';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  loadRequest,\r\n  loadSuccess,\r\n  loadFailure,\r\n  filterRequest,\r\n  filterSuccess,\r\n  filterFailure,\r\n} from './actions';\r\n\r\nconst pokemons = handleActions(\r\n    {\r\n      [loadRequest]: (_state, action) => {\r\n        return action.payload \r\n          ? _state\r\n          : []\r\n        \r\n      },\r\n      [filterRequest]: () => [],\r\n      [loadSuccess]: (_state, action) => {\r\n        return _state.concat(action.payload.pokemons)\r\n      },\r\n      [filterSuccess]: (_state, action) => action.payload,\r\n    },\r\n    [], \r\n  );\r\n\r\n  const next = handleActions(\r\n    {\r\n      [loadSuccess]: (_state, action) => action.payload.next,\r\n      [filterSuccess]: () => null\r\n    },\r\n    null\r\n  );\r\n  \r\n  const isLoading = handleActions(\r\n    {\r\n      [loadRequest]: () => true,\r\n      [loadSuccess]: () => false,\r\n      [loadFailure]: () => false,\r\n      [filterRequest]: () => true,\r\n      [filterSuccess]: () => false,\r\n      [filterFailure]: () => false,\r\n    },\r\n    false,\r\n  );\r\n  \r\n  const error = handleActions(\r\n    {\r\n      [loadRequest]: () => null,\r\n      [loadFailure]: (_state, action) => action.payload,\r\n      [filterRequest]: () => null,\r\n      [filterFailure]: (_state, action) => action.payload,\r\n    },\r\n    null,\r\n  );\r\n  \r\n  export default combineReducers({\r\n    pokemons,\r\n    next,\r\n    isLoading,\r\n    error,\r\n  });","\r\nexport const loadURL = (url) => \r\n    fetch(url,{\r\n        method: 'GET',\r\n        mode: 'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(res => res);\r\n\r\nexport const filter = typeName =>\r\n    fetch(`https://pokeapi.co/api/v2/type/${typeName}`,{\r\n          method: 'GET',\r\n          mode: 'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(res => res.pokemon)  \r\n\r\n\r\nexport const loadPokemon = url =>    \r\n    fetch(url, {\r\n        method: 'GET',\r\n        mode: 'cors'\r\n    })\r\n    .then(response => response.json())\r\n    .then(pokemon => pokemon)\r\n\r\n","import { takeLatest, put, call, all, fork } from 'redux-saga/effects';\r\nimport {\r\n    loadFailure,\r\n    loadSuccess,\r\n    loadRequest,\r\n    filterFailure,\r\n    filterSuccess,\r\n    filterRequest,\r\n  } from './actions';\r\nimport {loadURL, filter, loadPokemon} from './api.js'\r\n\r\nfunction* pokemonFilterFlow(action){\r\n  const type = action.payload  \r\n  try {        \r\n      const results = yield call(filter, type);      \r\n      const pokemons = yield all(\r\n        results.map(result => call (loadPokemon, result.pokemon.url))\r\n      )\r\n      yield put(filterSuccess(pokemons))      \r\n  } catch (error) {\r\n      yield put(filterFailure(error));\r\n  }\r\n}\r\n\r\nfunction* pokemonFlow(action) {    \r\n  const urlString = action.payload  \r\n  try {        \r\n      const results = yield call(loadURL, urlString);      \r\n      const pokemons = yield all(\r\n        results.results.map(result => call (loadPokemon, result.url))\r\n      )\r\n      yield put(loadSuccess({next: results.next, pokemons: pokemons}))      \r\n  } catch (error) {\r\n      yield put(loadFailure(error));\r\n  }\r\n}\r\n\r\nfunction* fetchPokemonFlowWatcher() {\r\n  yield takeLatest(loadRequest, pokemonFlow);\r\n}\r\n\r\nexport default function*() {\r\n    yield fork (fetchPokemonFlowWatcher);\r\n    yield takeLatest (filterRequest, pokemonFilterFlow);  \r\n  }","import React, { Component } from 'react';\r\nimport styles from './TypeList.module.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { filterRequest } from '../../modules/Load';\r\nimport { loadRequest } from '../../modules/Load';\r\n\r\nclass TypeList extends Component {    \r\n\r\n    \r\n    state={\r\n        filterValue: 'none'\r\n        }\r\n\r\n    handleChange = (event) => {       \r\n        const {filterValue} = this.state\r\n        const {filterRequest, loadRequest} = this.props\r\n        if (event.target.value !== filterValue){\r\n            this.setState({\r\n                filterValue: event.target.value\r\n            })\r\n            event.target.value !== 'none' \r\n            ? filterRequest(event.target.value)\r\n            : loadRequest('https://pokeapi.co/api/v2/pokemon/?limit=20');            \r\n        }\r\n    }\r\n      \r\n    renderMenuItems(){\r\n        const {typeList} = this.state\r\n        return typeList.map(type => (\r\n            <MenuItem \r\n                key={type}\r\n                value={type}\r\n                >\r\n                {type}\r\n            </MenuItem>\r\n        ))\r\n    }\r\n\r\n    render(){\r\n        const { types } =  this.props  \r\n        const {filterValue} = this.state\r\n        return(\r\n            <div className={styles.container}>\r\n                <Typography className={styles.title}>\r\n                    Filter pokemons by type\r\n                </Typography>\r\n                <TextField\r\n                    id=\"types\"\r\n                    select                  \r\n                    name=\"types\"\r\n                    value={filterValue}\r\n                    placeholder='Chose type'\r\n                    onChange={this.handleChange}                 \r\n                >\r\n                   {   types.length\r\n                        ? types.map(type => {\r\n                            return (\r\n                            <MenuItem key={type} value={type}>\r\n                              {type}\r\n                            </MenuItem>)\r\n                          })\r\n                        : null}    \r\n                         <MenuItem key='none' value='none'>\r\n                              none\r\n                        </MenuItem>               \r\n                </TextField>                     \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    filterRequest,\r\n    loadRequest\r\n  }\r\n\r\nexport default connect( null, mapDispatchToProps)(TypeList);","import React, { Component} from 'react';\r\nimport styles from './BaseStats.module.css';\r\n\r\nclass BaseStats extends Component {\r\n\r\n    state= {\r\n        statArr:null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {stats} = this.props\r\n        let statArr=[]\r\n        stats.forEach(function(elem){       \r\n            switch (elem.stat.name.toString()){                \r\n                case 'speed':\r\n                    statArr.push({name:'Speed', val: elem.base_stat}) \r\n                    break;\r\n                case 'special-defense':\r\n                    statArr.push({name:'Sp. Def', val: elem.base_stat})\r\n                    break;\r\n                case 'special-attack':\r\n                    statArr.push({name:'Sp. Atk', val: elem.base_stat})\r\n                    break;\r\n                case 'defense':\r\n                    statArr.push({name:'Defense', val: elem.base_stat})\r\n                    break;\r\n                case 'attack':\r\n                    statArr.push({name:'Attack', val: elem.base_stat})\r\n                    break;\r\n                case 'hp':\r\n                    statArr.push({name:'HP', val: elem.base_stat})\r\n                    break;\r\n                default:\r\n                    break\r\n            }\r\n        })\r\n        this.setState({\r\n            statArr: statArr.reverse()\r\n        })\r\n    }\r\n\r\n    determColor(val){\r\n        switch (true){\r\n            case val < 34:\r\n                return 'blue';\r\n            case val < 67:\r\n                return 'orange'\r\n            case val < 101:\r\n                return 'green'\r\n            default:\r\n                return 'red'\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {statArr} = this.state\r\n        return(\r\n            statArr ?\r\n            <table>\r\n                <tbody>\r\n                {statArr.map(stat => {\r\n                    let color = this.determColor(stat.val)\r\n                    return(\r\n                        <tr key={stat.name}>\r\n                            <td style={{width: '15%'}}>{stat.name}</td>\r\n                            <td \r\n                                style={{textAlign: 'center', width: '10%'}}\r\n                                >{stat.val}\r\n                            </td>\r\n                            <td>\r\n                            <div className={styles.bar_container}>\r\n                                <div \r\n                                className={styles.bar} \r\n                                style={{ \r\n                                width: stat.val+ '%',\r\n                                border: `2px solid ${color}`,\r\n                                backgroundColor: `${color}`\r\n                                      }}></div>\r\n                            </div>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n            :\r\n            null       \r\n\r\n        )\r\n            \r\n    }\r\n}\r\n\r\nexport default BaseStats;","import React, { Component } from 'react';\r\nimport styles from './Pokemon.module.css';\r\nimport BaseStats from '../BaseStats';\r\n\r\nconst colors = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080']\r\n\r\nclass Pokemon extends Component {\r\n\r\n    addPad(n, length) {\r\n        var len = length - (''+n).length;\r\n        return (len > 0 ? new Array(++len).join('0') : '') + n\r\n    }\r\n\r\n    getRandomColor() {\r\n      return colors[Math.floor(Math.random()*colors.length)]  \r\n    }\r\n\r\n    toFeet (n) {\r\n        var realFeet = (n*3.28);\r\n        var wholeFeet = Math.floor(realFeet);\r\n        var inches = (realFeet-wholeFeet) *12\r\n        var wholeInches = this.addPad(Math.round(inches), 2)\r\n        return wholeFeet + \"'\" + wholeInches + \"'' \";\r\n      }\r\n    \r\n\r\n    render(){\r\n        const {pokemon, onClick} = this.props          \r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={styles.main}>\r\n                    <div className={styles.avatar}>\r\n                        <img\r\n                            className={styles.avatar_img}\r\n                            src={ pokemon.sprites.front_default \r\n                                ? pokemon.sprites.front_default \r\n                                : null}\r\n                            alt={pokemon.name}\r\n                            onClick={onClick}\r\n                        >\r\n                        </img>\r\n                    </div>\r\n                    <div className={styles.mainData}>\r\n                        <h4 className={styles.title}>Pokédex data</h4> \r\n                        <table> \r\n                        <tbody>                                                 \r\n                            <tr>\r\n                                <td>National №</td>\r\n                                <td style={{fontWeight: 'bold'}}>\r\n                                 {this.addPad(pokemon.id, 3)}\r\n                                </td>                            \r\n                            </tr>   \r\n                            <tr>\r\n                                <td>Type</td>\r\n                                <td style={{display: 'inline-flex'}}>\r\n                                    {\r\n                                        pokemon.types.map((type, ind)=>{\r\n                                        return (\r\n                                            <div \r\n                                                key={ind}\r\n                                                className={styles.typeBox}\r\n                                                style={{\r\n                                                    backgroundColor: `${\r\n                                                        this.getRandomColor()\r\n                                                    }`}}\r\n                                            >\r\n                                                {type.type.name}\r\n                                            </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </td>                            \r\n                            </tr> \r\n                            <tr>\r\n                                <td>Species</td>\r\n                                <td>{pokemon.species.name}</td>                            \r\n                            </tr>  \r\n                            <tr>\r\n                                <td>Height</td>\r\n                                <td>{this.toFeet(parseInt(pokemon.height) /10)}\r\n                                    ({(parseInt(pokemon.height) /10)} m)\r\n                                </td>                            \r\n                            </tr> \r\n                            <tr>\r\n                                <td>Weight</td>\r\n                                <td>\r\n                                    {Math.round((\r\n                                        parseInt(pokemon.weight)/4.5359237\r\n                                        ) *10) /10 }\r\n                                    lbs ({\r\n                                    Math.round((\r\n                                        parseInt(pokemon.weight) /10\r\n                                        ) *10 ) / 10 } \r\n                                    kg)\r\n                                </td>                            \r\n                            </tr>  \r\n                            <tr>\r\n                                <td>Abilities</td>                            \r\n                                <td>\r\n                                {\r\n                                    pokemon.abilities.map((ability, ind)=>{\r\n                                        let add =\r\n                                        ability.is_hidden\r\n                                        ? '(hidden)'\r\n                                        : ''\r\n                                        return (\r\n                                            <p \r\n                                                key={ind}\r\n                                                style={{color: 'blue'}}\r\n                                            >\r\n                                                {ability.ability.name} {add}\r\n                                            </p>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </td>                            \r\n                            </tr>    \r\n                            </tbody>              \r\n                        </table>\r\n                    </div>         \r\n                </div>\r\n                <div className={styles.stat}>\r\n                    <h4 className={styles.title_stats}>Base stats</h4>\r\n                    <BaseStats\r\n                        stats={pokemon.stats}\r\n                    />\r\n                </div>               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pokemon;\r\n    ","export const takeData = (url) => {\r\n    return fetch(url,{\r\n            method: 'GET',\r\n            mode: 'cors'\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(res => res)\r\n        }","import React, { Component } from 'react';\r\nimport styles from './MiniPokyCard.module.css';\r\n\r\n//mini pokemon card with restricted data as child in evolutionCard\r\n//recives two props id of pokemon species and pokemon object with main pokemon data\r\n\r\nclass SpeciesCard extends Component {\r\n\r\n    findTypes = () => {\r\n        const {pokemon} = this.props\r\n        let typeString = '';\r\n        pokemon.types.forEach(function(type) {\r\n            typeString += '' + type.type.name\r\n        })\r\n        return typeString\r\n    }\r\n    \r\n    render(){\r\n        const {id, pokemon} = this.props \r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={styles.card}>                                        \r\n                    <img\r\n                        src={ pokemon.sprites.front_default? pokemon.sprites.front_default : null}\r\n                        alt={pokemon.name}\r\n                    >\r\n                    </img>\r\n                    <p style={{color:'#777879'}}>#{id}</p>\r\n                    <p style={{color:'blue', fontWeight: 'bold'}}>{pokemon.name}</p>\r\n                    {    \r\n                        pokemon.types.length ? \r\n                        <p style={{color:'#cea502', fontWeight: 'bold'}}>{this.findTypes()}</p>\r\n                        :\r\n                        <p>Has no types</p>\r\n                    }            \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SpeciesCard;\r\n    ","import React, { Component } from 'react';\r\nimport MiniPokyCard from '../MiniPokyCard'\r\nimport styles from './EvolutionCard.module.css';\r\n\r\n//evolution card with mini cards of clicked pokemon, his parent and children\r\n//recive 3 props clicked pokemon object, \r\n//parent object and childrens list of objects\r\n\r\n\r\nclass EvolutionCard extends Component {\r\n    \r\n\r\n    renderMiniCards = (pokemon, id) => {        \r\n        return (\r\n            <MiniPokyCard\r\n                    id={id}\r\n                    pokemon={pokemon}\r\n            />\r\n            )}\r\n\r\n    render(){\r\n        const {clickedPoky, to,from, closePopup } = this.props\r\n        return(\r\n            <div className={styles.popup}>            \r\n                <button onClick={closePopup}>X</button>\r\n                <div className={styles.popup_inner}>                \r\n                    <div className={styles.column}>\r\n                        <p className={styles.column_title}>Evolve from</p>\r\n                        {\r\n                            from !== 'none'                         \r\n                            ? from.pokemons.map(pokemon => {\r\n                                return(\r\n                                    <MiniPokyCard\r\n                                        key={pokemon.id}\r\n                                        id = {from.id}\r\n                                        pokemon = {pokemon}                    \r\n                                    />\r\n                                    )\r\n                                })\r\n                            :\r\n                            <p>Has no ancestor</p>\r\n                        }\r\n                    </div>\r\n                    <div className={styles.column}>\r\n                        <p className={styles.column_title}>Species</p>\r\n                        <MiniPokyCard\r\n                            id = {clickedPoky.id}\r\n                            pokemon = {clickedPoky.pokemon}                    \r\n                        />\r\n                    </div>\r\n                    <div className={styles.column}>\r\n                        <p className={styles.column_title}>Evolve to</p>\r\n                        {                            \r\n                            to !== 'none'                          \r\n                            ? to.pokemons.map(pokemon => {\r\n                                return(\r\n                                    <MiniPokyCard\r\n                                        key={pokemon.id}\r\n                                        id = {to.id}\r\n                                        pokemon = {pokemon}                    \r\n                                    />\r\n                                    )\r\n                                })\r\n                            :\r\n                            <p>Has no descendants</p>\r\n                        }\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EvolutionCard;","import React, { Component } from 'react';\r\nimport Pokemon from '../Pokemon';\r\nimport {takeData} from './api.js';\r\nimport EvolutionCard from '../EvolutionCard';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './PokemonList.module.css';\r\n\r\nclass PokemonList extends Component {\r\n\r\n    state={\r\n        pokemonList:[],\r\n        target: null,\r\n        showPopup: false,\r\n        specId: null,\r\n        from: null,\r\n        to: null\r\n    }\r\n\r\n    handlePokemonClick = (pokemon, event) =>{\r\n        const { specId } = this.state\r\n        this.setState({\r\n            target: pokemon \r\n        })\r\n        if (specId) {\r\n            this.setState({\r\n                target: pokemon,\r\n                to: null,\r\n                from: null,\r\n                specId: null,    \r\n            })\r\n        }\r\n        this.retrieveEvolutData(pokemon)\r\n        this.showPopup()\r\n    }\r\n\r\n    retrieveEvolutData = (pokemon) => { \r\n        return takeData(pokemon.species.url)        \r\n        .then(result => {            \r\n            this.setState({                        \r\n               specId: result.id\r\n            })\r\n            if (result.evolves_from_species){   \r\n                let ancestObj = {}\r\n                takeData(result.evolves_from_species.url)  \r\n                .then(ancestor => {\r\n                    ancestObj.id = ancestor.id\r\n                    return (this.retrivePokemons(ancestor.varieties))\r\n                })\r\n                .then((pokemons) => {\r\n                    ancestObj.pokemons = pokemons         \r\n                    this.setState({                        \r\n                        from: ancestObj\r\n                    })\r\n                })  \r\n            } else{this.setState({from: 'none'})}\r\n            \r\n            if (result.evolution_chain){\r\n                let descendObj = {}\r\n                takeData(result.evolution_chain.url)  \r\n                .then(chain => {\r\n                    var descUrl = this.findDesc(chain.chain)\r\n                    if (descUrl){\r\n                        takeData(descUrl)\r\n                        .then(descendant => {\r\n                            descendObj.id = descendant.id\r\n                            return (this.retrivePokemons(descendant.varieties))\r\n                        })\r\n                        .then((pokemons) => {\r\n                            descendObj.pokemons = pokemons      \r\n                            this.setState({    \r\n                                to: descendObj\r\n                            })\r\n                        }) \r\n                    } else{this.setState({to: 'none' })}\r\n                })\r\n            }                     \r\n        })\r\n    }  \r\n\r\n     \r\n    showPopup = () => {\r\n        const {showPopup} = this.state\r\n        if (!showPopup){\r\n            this.setState({\r\n                showPopup: true\r\n              });\r\n        }        \r\n    }\r\n\r\n    closePopup = ()=>{\r\n        this.setState({\r\n            showPopup: false\r\n          }); \r\n    }\r\n\r\n    retrivePokemons = (varieties) => {\r\n        return Promise.all(varieties.map(\r\n            variant => takeData(variant.pokemon.url)))\r\n            .then(pokemons => pokemons)            \r\n    }\r\n    \r\n    findDesc(chainObj){\r\n        const {target} = this.state        \r\n        console.log(chainObj)\r\n        if (chainObj.species.name === target.species.name){  \r\n            return(\r\n                chainObj.evolves_to[0] \r\n                ? chainObj.evolves_to[0].species.url\r\n                : null   \r\n            )                     \r\n        } else {\r\n            return (\r\n                chainObj.evolves_to[0] \r\n                ? this.findDesc (chainObj.evolves_to[0])\r\n                : null\r\n            )\r\n        }\r\n    }\r\n        \r\n    renderEvolutionCard = () => {        \r\n        const { specId, to, from} = this.state\r\n        const {target} = this.state \r\n        let clickedPoky= {\r\n            id: specId,\r\n            pokemon: target\r\n        }        \r\n        console.log('res list',to, from, specId)\r\n        return (\r\n            <EvolutionCard \r\n                clickedPoky={clickedPoky}\r\n                closePopup={this.closePopup}                \r\n                to={to}\r\n                from={from}\r\n            />\r\n        )\r\n    }\r\n   \r\n\r\n    renderPokemons() {\r\n        const {pokemons} = this.props   \r\n        return pokemons.map(pokemon => (\r\n            <Pokemon \r\n                key={pokemon.id} \r\n                pokemon={pokemon}\r\n                onClick={this.handlePokemonClick.bind(null,pokemon)}\r\n                >                \r\n            </Pokemon>\r\n        ))           \r\n    }   \r\n    \r\n    \r\n    render(){\r\n        const {pokemons, isLoading, error} = this.props\r\n        const {showPopup, to, from} = this.state\r\n        return(\r\n            <div \r\n            className={styles.container}\r\n            >\r\n                {pokemons ? \r\n                    this.renderPokemons()                        \r\n                    :\r\n                    null\r\n                }\r\n\r\n                { isLoading ?\r\n                 <p className={styles.message}>\r\n                     Pokémons are loading...\r\n                </p>  \r\n                 :\r\n                 null\r\n                }\r\n                { error ?\r\n                <p \r\n                    style={{color: 'red'}}\r\n                    className={styles.message}\r\n                    >\r\n                    Error is happend {error.text}</p>\r\n                : null\r\n                } \r\n                {showPopup && to && from ? \r\n                this.renderEvolutionCard()\r\n                : null\r\n                }                  \r\n                                  \r\n            </div>\r\n        )}\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemons: state.all.pokemons,\r\n    isLoading: state.all.isLoading,\r\n    error: state.all.error,\r\n  })\r\n  \r\nexport default connect(mapStateToProps, null)(PokemonList);\r\n","import React, { Component, Fragment } from 'react';\r\nimport TypeList from '../TypeList'\r\nimport PokemonList from '../PokemonList'\r\n//import styles from './App.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {loadTypes} from './api.js'\r\nimport { loadRequest } from '../../modules/Load';\r\n\r\n\r\nclass App extends Component {\r\n    state={\r\n        typeList: []\r\n    }\r\n\r\ncomponentDidMount() {    \r\n    const { loadRequest } = this.props;\r\n    loadRequest('https://pokeapi.co/api/v2/pokemon/?limit=20');\r\n    loadTypes()        \r\n    .then(types => {\r\n        return (\r\n            this.setState({ \r\n                typeList: types.map(type => type.name)\r\n            })\r\n        )                         \r\n    })\r\n    .catch(error => {\r\n        console.log(error);\r\n    })  \r\n}\r\n\r\nhandleScroll = (ev) => {\r\n    const { next, loadRequest } = this.props\r\n    let element = ev.target\r\n    if (element.scrollHeight - element.scrollTop === element.clientHeight) {\r\n        if (next){\r\n            loadRequest(next);\r\n        }\r\n    }\r\n      \r\n}\r\n\r\nrender(){\r\n    const {typeList} = this.state\r\n    const outterStyle = {\r\n        width: '100%',\r\n        height: '90%',\r\n        overflowY: 'auto'\r\n      }\r\n    return(\r\n        <Fragment>\r\n            <TypeList \r\n                types={typeList}\r\n            />\r\n            <div\r\n                style={outterStyle}\r\n                onScroll={this.handleScroll}\r\n            >              \r\n                <PokemonList/>\r\n            </div>\r\n        </Fragment>\r\n    )}\r\n}\r\n  const mapDispatchToProps = {\r\n    loadRequest\r\n  }\r\n\r\n  const mapStateToProps = state => ({\r\n    next: state.all.next,\r\n  })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n","export const loadTypes = () => \r\n    fetch('https://pokeapi.co/api/v2/type/?limit=100',{\r\n        method: 'GET',\r\n        mode: 'cors'\r\n        })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .then(res => res.results)","import { combineReducers } from 'redux';\r\nimport { fork } from 'redux-saga/effects';\r\nimport all, { sagas as loadSagas } from './Load';\r\n\r\nexport default combineReducers({\r\n    all\r\n  });\r\n\r\nexport function* rootSaga() {\r\n  yield fork(loadSagas);\r\n}","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer, { rootSaga } from './modules';\r\n\r\nconst createAppStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    compose(\r\n      applyMiddleware(sagaMiddleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : f => f\r\n    )\r\n  );\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n  \r\nexport default createAppStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport getStore from './store';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\n\r\nconst store = getStore();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pokemon_container__1njuX\",\"main\":\"Pokemon_main__1zoSP\",\"avatar\":\"Pokemon_avatar__eMHM-\",\"avatar_img\":\"Pokemon_avatar_img__1iE42\",\"mainData\":\"Pokemon_mainData__2ky9x\",\"stat\":\"Pokemon_stat__6aBs5\",\"title\":\"Pokemon_title__3fOse\",\"title_stats\":\"Pokemon_title_stats__1uZDL\",\"typeBox\":\"Pokemon_typeBox__B9r_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"EvolutionCard_popup__p7wS4\",\"popup_inner\":\"EvolutionCard_popup_inner__1kEzr\",\"column\":\"EvolutionCard_column__3Wnez\",\"column_title\":\"EvolutionCard_column_title__26Ofb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PokemonList_container__1AytU\",\"message\":\"PokemonList_message__1AabJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TypeList_title__1vFIh\",\"textField\":\"TypeList_textField__uoibG\",\"container\":\"TypeList_container__2ZO0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar_container\":\"BaseStats_bar_container__2NQ0i\",\"bar\":\"BaseStats_bar__1m9tZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MiniPokyCard_container__28C6T\",\"card\":\"MiniPokyCard_card__2vPqX\"};"],"sourceRoot":""}